El programa trabaja de la siguiente forma:Existe una clase Jugador que hereda de clase Persona, la suma de sus atributos son nombre, fecha de nacimiento, sexo, carrera, clave y puntuación.Estos objetos se crean en MenuMaraton y se guardan gracias a otra clase que se llama Utilidades la cual logra hacer posible la serialización de objetos.Cada juego de mesa tiene su clase propia, con su constructor y sus métodos. Para MiniBlackJack extendí otra clase que se llama Baraja la cual crea un arreglo de 52 objetos de tipo carta, y se modifico de tal manera que las cartas J Q K valieran 10 en lugar de 11, 12 y 13 respectivamente.Su funcionamiento dentro del main es mas sencillo, tomamos una carta de la baraja, obtenemos su valor, lo mostramos y preguntamos al jugador si desea sacar otra carta, si decide que no, el siguiente jugador empieza a sacar cartas y se evalúa quien es el ganador según las reglas. Se verifica quien es el ganador y se suman puntos, o de lo contrario no suman nada o se dividen los 10 puntos.En el día 2 tenemos el juego de Dados, Dados tiene dos arreglos los cuales simulan cada uno un dado, uno de sus métodos es para tirar dados, el cual usa random para elegir una posición de nuestro arreglo y regresar la suma de ambos índices de arreglos.En el main su funcionamiento es turno por turno, primero tira el jugador 1, luego el jugador 2, se evalúa  si alguno de los dos gana, pierde o tiene que volver a tirar, y si alguno gana o pierde se termina el juego.En el día 3 la clase de Conecta4 tenemos el método setTablero, que va colocando las marcas correspondientes solo con la columna como parámetro. Luego me parece relevante explicar 2 métodos, unos es ganarX el cual contiene todas aquellas posibles formas en las que la marca X puede ganar, y el otro es ganarO. Estos métodos nos sirven en el main ya que como al primer jugador siempre se le va a asignar la marca X, entonces si ganar es igual a true, quiere decir que jugador 1 es el ganador de esa partida.Ahora para el mostrar campeón, la lógica fue la siguiente:Cree un arreglo auxiliar que me guardara las puntuaciones de todos los jugadores registrados, luego al arreglo auxiliar le saque el numero máximo con un for, y por último dentro de otro for, fui comparando mi numero máximo (que en si ya era la puntuación máxima) con las puntuaciones de los jugadores desde el arreglo jugadores, y en el momento en el que se cumpliera la condición me concatenaba el nombre de ese jugador. Y ya fuera de esos tres for mandaba a imprimir mis nombres concatenados y la puntuación mayor, de esta forma me mostrará también aquellos jugadores que estén empatados.Para mostrar la lista de partidas cree otra clase que se llama Maraton, en la cual tenia 4 métodos principalmente, dividir grupo el cual recibía un arreglo de strings y regresaba otros dos arreglos, uno con los índices impares del arreglo principal y el otro con los índices pares. De ahí cree otros tres metodos que escribían las parejas, uno distinto para cada día del torneo, y si alguien se quedaba sin pareja de tipo jugador, especifica que jugará contra la computadora.Y por último explicaré Partidas registradas. Mi solución a este problema fue simple, tuve que hacer serializables a todos mis juegos, para poder guardarlos en un .txt y leerlos en el MenuMaraton, además les agregue un atributo de tipo string llamado estado, el cual dentro del main de cada juego, asignaba un nuevo estado el cual consistía en escribir si ganaron, perdieron o fue empate y de que jugador.Y dentro del main lo único que hice fue imprimir el estado de cada objeto (o sea el resultado de cada partida) con un for, y de cada tipo de juego.Y todo esto conforma mi proyecto final :)

Como comentario: al ejecutar por primera vez el programa saldrá la excepción de "lectura fallida" puesto que se necesita registrar jugadores para tener claves únicas de jugador con las cuales ejecutar los juegos y por tanto para que cree los archivos .txt faltantes. Pero en ningún momento afecta la ejecución del programa, ni cuenta como error o algo no contemplado.Alvarado Camacho Andrea